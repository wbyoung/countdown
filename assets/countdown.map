{"version":3,"sources":["countdown/app.js","countdown/controllers/countdown.js","countdown/helpers/time-number.js","countdown/initializers/app-version.js","countdown/initializers/clock-service.js","countdown/initializers/export-application-global.js","countdown/router.js","countdown/routes/countdown.js","countdown/services/clock.js","countdown/templates/application.js","countdown/templates/countdown.js","countdown/tests/app.jshint.js","countdown/tests/controllers/countdown.jshint.js","countdown/tests/helpers/resolver.js","countdown/tests/helpers/resolver.jshint.js","countdown/tests/helpers/start-app.js","countdown/tests/helpers/start-app.jshint.js","countdown/tests/helpers/time-number.jshint.js","countdown/tests/initializers/clock-service.jshint.js","countdown/tests/router.jshint.js","countdown/tests/routes/countdown.jshint.js","countdown/tests/services/clock.jshint.js","countdown/tests/test-helper.js","countdown/tests/test-helper.jshint.js","countdown/tests/unit/controllers/countdown-test.js","countdown/tests/unit/controllers/countdown-test.jshint.js","countdown/tests/unit/controllers/days-test.js","countdown/tests/unit/controllers/days-test.jshint.js","countdown/tests/unit/controllers/hours-test.js","countdown/tests/unit/controllers/hours-test.jshint.js","countdown/tests/unit/controllers/minutes-test.js","countdown/tests/unit/controllers/minutes-test.jshint.js","countdown/tests/unit/controllers/seconds-test.js","countdown/tests/unit/controllers/seconds-test.jshint.js","countdown/tests/unit/helpers/time-number-test.js","countdown/tests/unit/helpers/time-number-test.jshint.js","countdown/tests/unit/routes/countdown-test.js","countdown/tests/unit/routes/countdown-test.jshint.js","countdown/tests/unit/routes/days-test.js","countdown/tests/unit/routes/days-test.jshint.js","countdown/tests/unit/routes/hours-test.js","countdown/tests/unit/routes/hours-test.jshint.js","countdown/tests/unit/routes/minutes-test.js","countdown/tests/unit/routes/minutes-test.jshint.js","countdown/tests/unit/routes/seconds-test.js","countdown/tests/unit/routes/seconds-test.jshint.js","countdown/tests/unit/services/clock-test.js","countdown/tests/unit/services/clock-test.jshint.js","vendor/ember-cli/app-suffix.js"],"sourcesContent":["define('countdown/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', './config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('countdown/controllers/countdown', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    days: (function () {\n      var remaining = +this.get(\"remaining\");\n      var minuteLength = +this.get(\"model.lengths.minute\");\n      var hourLength = +this.get(\"model.lengths.hour\");\n      var dayLength = +this.get(\"model.lengths.day\");\n      return Math.floor(remaining / minuteLength / hourLength / dayLength);\n    }).property(\"hours\", \"model.lengths\"),\n\n    hours: (function () {\n      var remaining = +this.get(\"remaining\");\n      var minuteLength = +this.get(\"model.lengths.minute\");\n      var hourLength = +this.get(\"model.lengths.hour\");\n      var dayLength = +this.get(\"model.lengths.day\");\n      return Math.floor(remaining / minuteLength / hourLength) % dayLength;\n    }).property(\"remaining\", \"model.lengths\"),\n\n    minutes: (function () {\n      var remaining = +this.get(\"remaining\");\n      var minuteLength = +this.get(\"model.lengths.minute\");\n      var hourLength = +this.get(\"model.lengths.hour\");\n      return Math.floor(remaining / minuteLength) % hourLength;\n    }).property(\"remaining\", \"model.lengths\"),\n\n    seconds: (function () {\n      var remaining = +this.get(\"remaining\");\n      var minuteLength = +this.get(\"model.lengths.minute\");\n      return Math.floor(remaining) % minuteLength;\n    }).property(\"remaining\", \"model.lengths\"),\n\n    hasTime: (function () {\n      return this.get(\"hours\") || this.get(\"minutes\") || this.get(\"seconds\");\n    }).property(\"hours\", \"minutes\", \"seconds\"),\n\n    remaining: (function () {\n      var now = Math.floor(Date.now() / 1000);\n      var ranges = this.get(\"model.ranges\");\n      var remaining = ranges.reduce(function (seconds, range) {\n        var start = range.start;\n        var end = range.end;\n\n        if (start < now) {\n          start = now;\n        }\n        if (end < now) {\n          end = now;\n        }\n\n        return seconds + end - start;\n      }, 0);\n\n      return remaining;\n    }).property(\"model.ranges\", \"model.lengths\", \"clock.second\")\n\n  });\n\n});","define('countdown/helpers/time-number', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports.timeNumber = timeNumber;\n\n  function timeNumber(input) {\n    return input < 10 ? \"0\" + input : input;\n  }exports['default'] = Ember['default'].Handlebars.makeBoundHelper(timeNumber);\n  exports.__esModule = true;\n\n});","define('countdown/initializers/app-version', ['exports', '../config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function (container, application) {\n      var appName = classify(application.toString());\n      Ember['default'].libraries.register(appName, config['default'].APP.version);\n    }\n  };\n\n});","define('countdown/initializers/clock-service', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    application.inject(\"route\", \"clock\", \"service:clock\");\n    application.inject(\"controller\", \"clock\", \"service:clock\");\n  }exports['default'] = {\n    name: \"clock-service\",\n    initialize: initialize\n  };\n  exports.__esModule = true;\n\n});","define('countdown/initializers/export-application-global', ['exports', 'ember', '../config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal) {\n      window[classifiedName] = application;\n    }\n  };\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n  exports.__esModule = true;\n\n});","define('countdown/router', ['exports', 'ember', './config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route(\"countdown\", { path: \"/\" });\n  });\n\n  exports['default'] = Router;\n\n});","define('countdown/routes/countdown', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function () {\n      return JSON.parse(decodeURIComponent(location.search.substr(1)));\n    } });\n\n});","define('countdown/services/clock', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Object.extend({\n    second: null,\n    minute: null,\n    hour: null,\n\n    init: function () {\n      this.tick();\n    },\n\n    tick: function () {\n      var now = new Date();\n\n      this.setProperties({\n        second: now.getSeconds(),\n        minute: now.getMinutes(),\n        hour: now.getHours() });\n\n      setTimeout(this.tick.bind(this), 1000);\n    } });\n\n});","define('countdown/templates/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('countdown/templates/countdown', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n  \");\n    stack1 = helpers['if'].call(depth0, \"days\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n  \");\n    stack1 = helpers['if'].call(depth0, \"hasTime\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n  function program2(depth0,data) {\n    \n    var buffer = '', stack1;\n    stack1 = helpers._triageMustache.call(depth0, \"days\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" days\");\n    return buffer;\n    }\n\n  function program4(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(escapeExpression((helper = helpers['time-number'] || (depth0 && depth0['time-number']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"hours\", options) : helperMissing.call(depth0, \"time-number\", \"hours\", options))));\n    data.buffer.push(\":\");\n    data.buffer.push(escapeExpression((helper = helpers['time-number'] || (depth0 && depth0['time-number']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"minutes\", options) : helperMissing.call(depth0, \"time-number\", \"minutes\", options))));\n    data.buffer.push(\":\");\n    data.buffer.push(escapeExpression((helper = helpers['time-number'] || (depth0 && depth0['time-number']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"seconds\", options) : helperMissing.call(depth0, \"time-number\", \"seconds\", options))));\n    return buffer;\n    }\n\n    data.buffer.push(\"\\n\");\n    stack1 = helpers['if'].call(depth0, \"remaining\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('countdown/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/controllers/countdown.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/countdown.js should pass jshint', function() { \n    ok(true, 'controllers/countdown.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/helpers/resolver', ['exports', 'ember/resolver', '../../config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('countdown/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/helpers/start-app', ['exports', 'ember', '../../app', '../../router', '../../config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('countdown/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/helpers/time-number.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/time-number.js should pass jshint', function() { \n    ok(true, 'helpers/time-number.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/initializers/clock-service.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/clock-service.js should pass jshint', function() { \n    ok(true, 'initializers/clock-service.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/routes/countdown.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/countdown.js should pass jshint', function() { \n    ok(true, 'routes/countdown.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/services/clock.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - services');\n  test('services/clock.js should pass jshint', function() { \n    ok(true, 'services/clock.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/test-helper', ['./helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('countdown/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/controllers/countdown-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:countdown\", \"CountdownController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('countdown/tests/unit/controllers/countdown-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/countdown-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/countdown-test.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/controllers/days-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:days\", \"DaysController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('countdown/tests/unit/controllers/days-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/days-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/days-test.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/controllers/hours-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:hours\", \"HoursController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('countdown/tests/unit/controllers/hours-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/hours-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/hours-test.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/controllers/minutes-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:minutes\", \"MinutesController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('countdown/tests/unit/controllers/minutes-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/minutes-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/minutes-test.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/controllers/seconds-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:seconds\", \"SecondsController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('countdown/tests/unit/controllers/seconds-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/seconds-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/seconds-test.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/helpers/time-number-test', ['countdown/helpers/time-number'], function (time_number) {\n\n  'use strict';\n\n  module(\"TimeNumberHelper\");\n\n  // Replace this with your real tests.\n  test(\"it works\", function () {\n    var result = time_number.timeNumber(42);\n    ok(result);\n  });\n\n});","define('countdown/tests/unit/helpers/time-number-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/helpers');\n  test('unit/helpers/time-number-test.js should pass jshint', function() { \n    ok(true, 'unit/helpers/time-number-test.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/routes/countdown-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:countdown\", \"CountdownRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('countdown/tests/unit/routes/countdown-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/countdown-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/countdown-test.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/routes/days-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:days\", \"DaysRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('countdown/tests/unit/routes/days-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/days-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/days-test.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/routes/hours-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:hours\", \"HoursRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('countdown/tests/unit/routes/hours-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/hours-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/hours-test.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/routes/minutes-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:minutes\", \"MinutesRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('countdown/tests/unit/routes/minutes-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/minutes-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/minutes-test.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/routes/seconds-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:seconds\", \"SecondsRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('countdown/tests/unit/routes/seconds-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/seconds-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/seconds-test.js should pass jshint.'); \n  });\n\n});","define('countdown/tests/unit/services/clock-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"service:clock\", \"ClockService\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var service = this.subject();\n    ok(service);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['service:foo']\n\n});","define('countdown/tests/unit/services/clock-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/services');\n  test('unit/services/clock-test.js should pass jshint', function() { \n    ok(true, 'unit/services/clock-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\ndefine('countdown/config/environment', ['ember'], function(Ember) {\n  var prefix = 'countdown';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"countdown/tests/test-helper\");\n} else {\n  require(\"countdown/app\")[\"default\"].create({\"name\":\"countdown\",\"version\":\"0.0.0.adc7f75f\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"countdown.js"}